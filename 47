import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;


public class MyClass {
  public static void main(String args[]) {
     Scanner scanner = new Scanner(System.in);
        System.out.print("Введите N (размер массива N x N): ");
        int N = scanner.nextInt();
        
        
        int[][] array = generateRandomArray(N);
        System.out.println("Исходный массив:");
        printArray(array);
        
      
        int[] snailSorted = snailSort(array);
        System.out.println("Результат сортировки змейкой:");
        System.out.println(Arrays.toString(snailSorted));
    }
    
  
    public static int[][] generateRandomArray(int N) {
        int[][] array = new int[N][N];
        Random random = new Random();
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                array[i][j] = random.nextInt(100); // числа от 0 до 99
            }
        }
        return array;
    }
    
    
    public static void printArray(int[][] array) {
        for (int[] row : array) {
            System.out.println(Arrays.toString(row));
        }
    }
    
    
    public static int[] snailSort(int[][] array) {
        if (array == null || array.length == 0) return new int[0];
        
        int n = array.length;
        int[] result = new int[n * n];
        int index = 0;
        
        int rowStart = 0, rowEnd = n - 1;
        int colStart = 0, colEnd = n - 1;
        
        while (rowStart <= rowEnd && colStart <= colEnd) {
            
            for (int i = colStart; i <= colEnd; i++) {
                result[index++] = array[rowStart][i];
            }
            rowStart++;
            
           
            for (int i = rowStart; i <= rowEnd; i++) {
                result[index++] = array[i][colEnd];
            }
            colEnd--;
            
            if (rowStart <= rowEnd) {
                
                for (int i = colEnd; i >= colStart; i--) {
                    result[index++] = array[rowEnd][i];
                }
                rowEnd--;
            }
            
            if (colStart <= colEnd) {
              
                for (int i = rowEnd; i >= rowStart; i--) {
                    result[index++] = array[i][colStart];
                }
                colStart++;
            }
        }
        
        return result;
  }
}
